definitions:
  diploma_modules_auth_handler_model.LoginInput:
    properties:
      password:
        example: secure123
        type: string
      phone_number:
        example: "+123456789"
        type: string
    type: object
  diploma_modules_auth_handler_model.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  diploma_modules_auth_handler_model.RegisterInput:
    properties:
      confirm_password:
        example: secure123
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: secure123
        type: string
      phone_number:
        example: "+123456789"
        type: string
    type: object
  diploma_modules_auth_handler_model.RegisterResponse:
    properties:
      id:
        example: 1
        type: integer
    type: object
  diploma_modules_cart_handler_model.AddProductToCardResponse:
    properties:
      status:
        type: string
    type: object
  diploma_modules_cart_handler_model.AddProductToCartInput:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
      supplier_id:
        type: integer
    type: object
  diploma_modules_cart_handler_model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  diploma_modules_cart_handler_model.GetCartResponse:
    properties:
      customer_id:
        type: integer
      suppliers:
        items:
          $ref: '#/definitions/diploma_modules_cart_handler_model.Supplier'
        type: array
      total:
        type: integer
    type: object
  diploma_modules_cart_handler_model.Product:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    type: object
  diploma_modules_cart_handler_model.Supplier:
    properties:
      delivery_fee:
        type: integer
      free_delivery_amount:
        type: integer
      id:
        type: integer
      name:
        type: string
      orderAmount:
        type: integer
      product_list:
        items:
          $ref: '#/definitions/diploma_modules_cart_handler_model.Product'
        type: array
      total_amount:
        type: integer
    type: object
  diploma_modules_product_handler_model.DetailedProduct:
    properties:
      product:
        $ref: '#/definitions/diploma_modules_product_handler_model.Product'
      suppliers:
        items:
          $ref: '#/definitions/diploma_modules_product_handler_model.ProductSupplier'
        type: array
    type: object
  diploma_modules_product_handler_model.Product:
    properties:
      id:
        type: integer
      imageUrl:
        type: string
      lowest_product_supplier:
        $ref: '#/definitions/diploma_modules_product_handler_model.ProductSupplier'
      name:
        type: string
    type: object
  diploma_modules_product_handler_model.ProductListResponse:
    properties:
      product_list:
        items:
          $ref: '#/definitions/diploma_modules_product_handler_model.Product'
        type: array
      total:
        type: integer
    type: object
  diploma_modules_product_handler_model.ProductResponse:
    properties:
      product:
        $ref: '#/definitions/diploma_modules_product_handler_model.DetailedProduct'
    type: object
  diploma_modules_product_handler_model.ProductSupplier:
    properties:
      price:
        type: integer
      sell_amount:
        type: integer
      supplier:
        $ref: '#/definitions/diploma_modules_product_handler_model.Supplier'
    type: object
  diploma_modules_product_handler_model.Supplier:
    properties:
      delivery_fee:
        type: integer
      free_delivery_amount:
        type: integer
      id:
        type: integer
      name:
        type: string
      order_amount:
        type: integer
    type: object
  gin.H:
    additionalProperties: {}
    type: object
info:
  contact: {}
  description: This is a sample server with JWT authorization.
  title: Go JWT Swagger Example API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login user and return tokens
      parameters:
      - description: Login input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/diploma_modules_auth_handler_model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diploma_modules_auth_handler_model.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/gin.H'
      summary: User login
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Register input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/diploma_modules_auth_handler_model.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/diploma_modules_auth_handler_model.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: User registration
      tags:
      - auth
  /api/cart:
    get:
      consumes:
      - application/json
      description: --
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diploma_modules_cart_handler_model.GetCartResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diploma_modules_cart_handler_model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get cart
      tags:
      - cart
  /api/cart/add:
    post:
      consumes:
      - application/json
      description: --
      parameters:
      - description: Put Card input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/diploma_modules_cart_handler_model.AddProductToCartInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diploma_modules_cart_handler_model.AddProductToCardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diploma_modules_cart_handler_model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Put product to Card
      tags:
      - cart
  /api/product/:id:
    get:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: product id
        in: query
        name: product_id
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/diploma_modules_product_handler_model.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: User registration
      tags:
      - product
  /api/product/list:
    get:
      consumes:
      - application/json
      description: Retrieve a list of products with pagination support using limit
        and offset
      parameters:
      - description: Limit number of products
        in: query
        name: limit
        type: integer
      - description: Offset for pagination
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diploma_modules_product_handler_model.ProductListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get product list
      tags:
      - product
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
